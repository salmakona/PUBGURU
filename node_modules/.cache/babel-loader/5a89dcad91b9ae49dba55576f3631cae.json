{"ast":null,"code":"import _classCallCheck from \"/Users/salmakonagugly/Documents/react-learning/pubguru/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/salmakonagugly/Documents/react-learning/pubguru/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/salmakonagugly/Documents/react-learning/pubguru/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/salmakonagugly/Documents/react-learning/pubguru/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/salmakonagugly/Documents/react-learning/pubguru/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/salmakonagugly/Documents/react-learning/pubguru/src/components/Layout/MainLayout.js\";\nimport { Content, Sidebar } from 'components/Layout';\nimport React from 'react';\n\nvar MainLayout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainLayout, _React$Component);\n\n  function MainLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleContentClick = function (event) {\n      // close sidebar if sidebar is open and screen size is less than `md`\n      if (MainLayout.isSidebarOpen() && (_this.props.breakpoint === 'xs' || _this.props.breakpoint === 'sm' || _this.props.breakpoint === 'md')) {\n        _this.openSidebar('close');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MainLayout, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var breakpoint = _ref.breakpoint;\n\n      if (breakpoint !== this.props.breakpoint) {\n        this.checkBreakpoint(breakpoint);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkBreakpoint(this.props.breakpoint);\n    } // close sidebar when\n\n  }, {\n    key: \"checkBreakpoint\",\n    value: function checkBreakpoint(breakpoint) {\n      switch (breakpoint) {\n        case 'xs':\n        case 'sm':\n        case 'md':\n          return this.openSidebar('close');\n\n        case 'lg':\n        case 'xl':\n        default:\n          return this.openSidebar('open');\n      }\n    }\n  }, {\n    key: \"openSidebar\",\n    value: function openSidebar(openOrClose) {\n      if (openOrClose === 'open') {\n        return document.querySelector('.cr-sidebar').classList.add('cr-sidebar--open');\n      }\n\n      document.querySelector('.cr-sidebar').classList.remove('cr-sidebar--open');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(\"main\", {\n        className: \"cr-app bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Content, {\n        fluid: true,\n        onClick: this.handleContentClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, children));\n    }\n  }], [{\n    key: \"isSidebarOpen\",\n    value: function isSidebarOpen() {\n      return document.querySelector('.cr-sidebar').classList.contains('cr-sidebar--open');\n    }\n  }]);\n\n  return MainLayout;\n}(React.Component);\n\nexport default MainLayout;","map":{"version":3,"sources":["/Users/salmakonagugly/Documents/react-learning/pubguru/src/components/Layout/MainLayout.js"],"names":["Content","Sidebar","React","MainLayout","handleContentClick","event","isSidebarOpen","props","breakpoint","openSidebar","checkBreakpoint","openOrClose","document","querySelector","classList","add","remove","children","contains","Component"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,mBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAGMC,U;;;;;;;;;;;;;;;;;;UAmBJC,kB,GAAqB,UAAAC,KAAK,EAAI;AAC5B;AACA,UACEF,UAAU,CAACG,aAAX,OACC,MAAKC,KAAL,CAAWC,UAAX,KAA0B,IAA1B,IACC,MAAKD,KAAL,CAAWC,UAAX,KAA0B,IAD3B,IAEC,MAAKD,KAAL,CAAWC,UAAX,KAA0B,IAH5B,CADF,EAKE;AACA,cAAKC,WAAL,CAAiB,OAAjB;AACD;AACF,K;;;;;;;oDAtByC;AAAA,UAAdD,UAAc,QAAdA,UAAc;;AACxC,UAAIA,UAAU,KAAK,KAAKD,KAAL,CAAWC,UAA9B,EAA0C;AACxC,aAAKE,eAAL,CAAqBF,UAArB;AACD;AACF;;;wCAEmB;AAClB,WAAKE,eAAL,CAAqB,KAAKH,KAAL,CAAWC,UAAhC;AAED,K,CAED;;;;oCAagBA,U,EAAY;AAC1B,cAAQA,UAAR;AACE,aAAK,IAAL;AACA,aAAK,IAAL;AACA,aAAK,IAAL;AACE,iBAAO,KAAKC,WAAL,CAAiB,OAAjB,CAAP;;AAEF,aAAK,IAAL;AACA,aAAK,IAAL;AACA;AACE,iBAAO,KAAKA,WAAL,CAAiB,MAAjB,CAAP;AATJ;AAWD;;;gCAEWE,W,EAAa;AACvB,UAAIA,WAAW,KAAK,MAApB,EAA4B;AAC1B,eAAOC,QAAQ,CACZC,aADI,CACU,aADV,EAEJC,SAFI,CAEMC,GAFN,CAEU,kBAFV,CAAP;AAGD;;AACDH,MAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAgDE,MAAhD,CAAuD,kBAAvD;AACD;;;6BAEQ;AAAA,UACCC,QADD,GACc,KAAKV,KADnB,CACCU,QADD;AAEP,aACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,OAAO,EAAE,KAAKb,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGa,QAFH,CAFF,CADF;AAYD;;;oCAnEsB;AACrB,aAAOL,QAAQ,CACZC,aADI,CACU,aADV,EAEJC,SAFI,CAEMI,QAFN,CAEe,kBAFf,CAAP;AAGD;;;;EALsBhB,KAAK,CAACiB,S;;AAuE/B,eAAehB,UAAf","sourcesContent":["import { Content, Sidebar } from 'components/Layout';\nimport React from 'react';\n\n\nclass MainLayout extends React.Component {\n  static isSidebarOpen() {\n    return document\n      .querySelector('.cr-sidebar')\n      .classList.contains('cr-sidebar--open');\n  }\n\n  componentWillReceiveProps({ breakpoint }) {\n    if (breakpoint !== this.props.breakpoint) {\n      this.checkBreakpoint(breakpoint);\n    }\n  }\n\n  componentDidMount() {\n    this.checkBreakpoint(this.props.breakpoint);\n\n  }\n\n  // close sidebar when\n  handleContentClick = event => {\n    // close sidebar if sidebar is open and screen size is less than `md`\n    if (\n      MainLayout.isSidebarOpen() &&\n      (this.props.breakpoint === 'xs' ||\n        this.props.breakpoint === 'sm' ||\n        this.props.breakpoint === 'md')\n    ) {\n      this.openSidebar('close');\n    }\n  };\n\n  checkBreakpoint(breakpoint) {\n    switch (breakpoint) {\n      case 'xs':\n      case 'sm':\n      case 'md':\n        return this.openSidebar('close');\n\n      case 'lg':\n      case 'xl':\n      default:\n        return this.openSidebar('open');\n    }\n  }\n\n  openSidebar(openOrClose) {\n    if (openOrClose === 'open') {\n      return document\n        .querySelector('.cr-sidebar')\n        .classList.add('cr-sidebar--open');\n    }\n    document.querySelector('.cr-sidebar').classList.remove('cr-sidebar--open');\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <main className=\"cr-app bg-light\">\n        <Sidebar />\n        <Content fluid onClick={this.handleContentClick}>\n          {/* <Header /> */}\n          {children}\n          {/* <Footer /> */}\n        </Content>\n\n        \n      </main>\n    );\n  }\n}\n\nexport default MainLayout;\n"]},"metadata":{},"sourceType":"module"}